template: true
valuesFilePath: ./values.yml

resources:
  - name: {{ .Values.myPipeline.resourcesPrefix }}git_resource
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.myRepo.gitProvider }}
      path: {{ .Values.myRepo.path }}
      branches:
        include: {{ .Values.myRepo.branch }}

  # - name: {{ .Values.myPipeline.resourcesPrefix }}cron_trigger
  #   type: CronTrigger
  #   configuration:
  #     interval: '0 0 3 * *'     # Every day at 3:00am

pipelines:
  - name: {{ .Values.myPipeline.name }}
    steps:
      - name: pre_checks
        type: Bash
        configuration:
          inputResources:
            - name: {{ .Values.myPipeline.resourcesPrefix }}git_resource
              trigger: false
            # - name: {{ .Values.myPipeline.resourcesPrefix }}cron_trigger
            #   trigger: true
          integrations:
            - name: {{ .Values.myArtifactory.integrationName }}
        execution:
          onExecute:
            - echo $res_{{ .Values.myPipeline.resourcesPrefix }}git_resource_resourcePath
            - export artifactsCutOffDate=$(date -d "$date -{{ .Values.myPipeline.deleteArtifactsOlderThan }} days" +"%Y-%m-%d")
            - export downloadsCutOffDate=$(date -d "$date -{{ .Values.myPipeline.deleteWhenLastDownload }} days" +"%Y-%m-%d")
            - add_run_variables ARTIFACTS_CUTOFF_DATE=$artifactsCutOffDate DOWNLOAD_CUTOFF_DATE=$downloadsCutOffDate
            - env
            - sed -i "s/ARTIFACTS_CUTOFF_DATE/$artifactsCutOffDate/g" $res_{{ .Values.myPipeline.resourcesPrefix }}git_resource_resourcePath/files/files-to-cleanup.json
            - sed -i "s/DOWNLOAD_CUTOFF_DATE/$downloadsCutOffDate/g" $res_{{ .Values.myPipeline.resourcesPrefix }}git_resource_resourcePath/files/files-to-cleanup.json
            - cat $res_{{ .Values.myPipeline.resourcesPrefix }}git_resource_resourcePath/files/files-to-cleanup.json
            - jfrog rt search --spec $res_{{ .Values.myPipeline.resourcesPrefix }}git_resource_resourcePath/files/files-to-cleanup.json

      - name: delete_old_files
        type: Bash
        configuration:
          # requiresApproval: true
          inputResources:
            - name: {{ .Values.myPipeline.resourcesPrefix }}git_resource
              trigger: false
          integrations:
            - name: {{ .Values.myArtifactory.integrationName }}
          inputSteps:
            - name: pre_checks
        execution:
          onExecute:
            - sed -i "s/ARTIFACTS_CUTOFF_DATE/$ARTIFACTS_CUTOFF_DATE/g" $res_{{ .Values.myPipeline.resourcesPrefix }}git_resource_resourcePath/files/files-to-cleanup.json
            - sed -i "s/DOWNLOAD_CUTOFF_DATE/$DOWNLOAD_CUTOFF_DATE/g" $res_{{ .Values.myPipeline.resourcesPrefix }}git_resource_resourcePath/files/files-to-cleanup.json
            - cat $res_{{ .Values.myPipeline.resourcesPrefix }}git_resource_resourcePath/files/files-to-cleanup.json
            - jfrog rt delete --spec $res_{{ .Values.myPipeline.resourcesPrefix }}git_resource_resourcePath/files/files-to-cleanup.json --dry-run={{ .Values.myPipeline.dryrun }} --quiet
